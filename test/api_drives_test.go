/*
Libre Graph API

Testing DrivesApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package libregraph

import (
	"context"
	openapiclient "github.com/owncloud/libre-graph-api-go"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_libregraph_DrivesApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test DrivesApiService CreateDrive", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.DrivesApi.CreateDrive(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DrivesApiService DeleteDrive", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var driveId string

		httpRes, err := apiClient.DrivesApi.DeleteDrive(context.Background(), driveId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DrivesApiService GetDrive", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var driveId string

		resp, httpRes, err := apiClient.DrivesApi.GetDrive(context.Background(), driveId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DrivesApiService UpdateDrive", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var driveId string

		resp, httpRes, err := apiClient.DrivesApi.UpdateDrive(context.Background(), driveId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
